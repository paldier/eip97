/* c_device_lkm.h
 *
 * Configuration Handling for Driver Framework Device API implementation.
 * A build-level configuration file is included and sanity-checked.
 * Do not edit this file. Edit cs_hwpal_lkm.h instead.
 */

/*****************************************************************************
* Copyright (c) 2010-2014 INSIDE Secure B.V. All Rights Reserved.
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 2 of the License, or
* any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*****************************************************************************/

/*----------------------------------------------------------------
 * get configuration settings from product config file
 */
#include "cs_hwpal_lkm.h"

// choose from LOG_SEVERITY_INFO, LOG_SEVERITY_WARN, LOG_SEVERITY_CRIT
#ifndef HWPAL_LOG_SEVERITY
#define HWPAL_LOG_SEVERITY LOG_SEVERITY_INFO
#endif

#ifndef HWPAL_MAX_DEVICE_NAME_LENGTH
#error "Expected HWPAL_MAX_DEVICE_NAME_LENGTH \
        defined by cs_hwpal_lkm.h"
#endif

#ifndef HWPAL_DEVICES
#error "Expected HWPAL_DEVICES defined by cs_hwpal_lkm.h"
#endif

// Device driver name used for looking up the device and reporting
#ifndef HWPAL_DRIVER_NAME
#define HWPAL_DRIVER_NAME "SafeXcel"
#endif

/*----------------------------------------------------------------
 * Other configuration parameters that can be set in a top level
 * configuration
 */

/* HWPAL_DEVICE_ID
 *
 * Device identification required for implementation of Device API
 */

/* HWPAL_VENDOR_ID
 *
 * Device vendor identification required for implementation of Device API
 */

/* HWPAL_REMAP_ADDRESSES
 *
 * Macro that can be used to remap a device static resource offset
 * (a relative address) to another address
 *
 * Example:
 * #define HWPAL_REMAP_ADDRESSES     HWPAL_REMAP_ONE(0x71004, 0x71200);
 *
 */

/* HWPAL_DEVICE_MAGIC
 *
 * Optional magic number used to validate device administration data
 */

/* HWPAL_DEVICE_DIRECT_MEMIO
 *
 * Enable this parameter in order to use the direct memory I/O
 * operations bypassing the Linux kernel memory I/O API
 */

/* HWPAL_PLATFORM_DEVICE_NAME
 *
 * Platform-specific device name that can be used for looking up
 * device properties
 */

#ifndef HWPAL_PLATFORM_DEVICE_NAME
#define HWPAL_PLATFORM_DEVICE_NAME      HWPAL_DRIVER_NAME
#endif

/* HWPAL_PLATFORM_DEVICE_COMPATIBLE
 *
 * Platform-specific compatible device that can be used for device probing
 *
 */

#ifndef HWPAL_PLATFORM_DEVICE_COMPATIBLE
#define HWPAL_PLATFORM_DEVICE_COMPATIBLE        HWPAL_PLATFORM_DEVICE_NAME
#endif

/* HWPAL_USE_UMDEVXS_DEVICE
 *
 * Use external Linux kernel device data structure provided by the kernel
 * after instantiating the device driver in the kernel.
 *
 */
//#define HWPAL_USE_UMDEVXS_DEVICE


/* end of file c_device_lkm.h */
